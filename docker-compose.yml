networks:
  dockerwp:

services:

  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "8033:80"
    volumes:
      - ./app:/var/www
      - ./logs:/var/log/nginx
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-service
      - mysql-service
    networks:
      - dockerwp

  # php
  php-service:
    build: 
      context: .
      dockerfile: ./config/php/Dockerfile
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    container_name: php-container
    ports:
      - "9000:9000"
    volumes:
      - ./app:/var/www
      # - ./config/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      # xdebug required php 8+
    networks:
      - dockerwp

  # mysql
  mysql-service:
    image: mysql:8
    container_name: mysql-container
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_DATABASE: '${DB_NAME}'
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PSWD}'
      MYSQL_USER: '${DB_USER_NAME}'
      MYSQL_PASSWORD: '${DB_USER_PSWD}'
    networks:
      - dockerwp

  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - mysql-service
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql-service
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PSWD}'
    networks:
      - dockerwp

  # node
  node-service:
    build:
      context: .
      dockerfile: ./config/node/Dockerfile
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    container_name: node-container
    volumes:
      - ./app:/code
    networks:
      - dockerwp

  # elastic
#  elastic-service:
#    image: elasticsearch:7.17.7
#    container_name: elastic-container
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#      - 9300:9300
#    networks:
#      - dockerwp

volumes:
  elasticsearch-data:
    driver: local
